{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_enums/alertsLvl.ts","./src/app/_enums/bckImage.ts","./src/app/_enums/cycle.ts","./src/app/_enums/icons.ts","./src/app/_helpers/HttpHelper.ts","./src/app/_helpers/IconHelper.ts","./src/app/_helpers/config.access.ts","./src/app/_helpers/number.validator.ts","./src/app/_model/constants.ts","./src/app/_model/weatherError.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/password-modal/password-modal.component.ts","./src/app/password-modal/password-modal.component.html","./src/app/services/config.service.ts","./src/app/services/day-night-cycle.service.ts","./src/app/services/image-service.service.ts","./src/app/services/toast.service.ts","./src/app/services/weather.service.ts","./src/app/toast/toast.component.ts","./src/app/weather-alert/weather-alert.component.ts","./src/app/weather-alert/weather-alert.component.html","./src/app/weather-config/weather-config.component.ts","./src/app/weather-config/weather-config.component.html","./src/app/weather-extended/weather-extended.component.ts","./src/app/weather-extended/weather-extended.component.html","./src/app/weather/weather.component.ts","./src/app/weather/weather.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export enum AlertLvl{\r\n    WARNING = 'Warnings',\r\n    WATCH = 'Watchs',\r\n    STATEMENT = 'Statements',\r\n}","export enum BackImage{\r\n    RAIN,\r\n    // RAIN_NIGHT = '',\r\n    CLOUDY  ,\r\n    // CLOUDY_NIGHT = '',\r\n    SUNNY ,\r\n    // SUNNY_NIGHT = '',\r\n    THUNDER,\r\n    // THUNDER_NIGHT = '',\r\n    SNOW ,\r\n    FOG  // fog and mist\r\n    \r\n    // SNOW_NIGHT = ''\r\n}","export enum Cycle{\r\n    DAY, NIGHT, NA\r\n}","export enum Icons{\r\n    RAIN = 'Rain',\r\n    LIGHT_RAIN = 'Light Rain',\r\n    MIST = 'Mist',\r\n    FOG = 'Fog',\r\n    MAINLY_SUNNY = 'Mainly Sunny',\r\n    PARTYL_CLOUDY = 'Partly Cloudy',\r\n    MOSTLY_CLOUDY = 'Mostly Cloudy',\r\n    CLOUDY = 'Cloudy',\r\n    SUNNY = 'Sunny',\r\n    CLEAR = 'Clear',\r\n    LIGHT_SNOW = 'Light Snow',\r\n    LIGHT_DRIZZLE = 'Light Drizzle',\r\n    MAINLY_CLEAR= 'Mainly Clear',\r\n    LIGHT_RAIN_AND_FOG = 'Light Rain and Fog',\r\n    LIGHT_RAINSHOWER = 'Light Rainshower',\r\n    HAZE = 'Haze',\r\n    FOG_PATCHES = 'Fog Patches',\r\n    THUNDERSTORM_WITH_LIGHT_RAINSHOWERS = 'Thunderstorm with light rainshowers',\r\n    LIGHT_SNOWSHOWER = 'Light Snowshower',\r\n    SNOW    = 'Snow',\r\n    NA = 'Not observed',\r\n\r\n\r\n    // mostly forecasts\r\n    CHANCE_OF_SHOWERS = 'Chance of showers',\r\n    A_MIX_OF_SUN_AND_CLOUD = 'A mix of sun and cloud',\r\n    PERIODS_OF_RAIN = 'Periods of rain',\r\n    SHOWERS = 'Showers',\r\n    A_FEW_CLOUDS = 'A few clouds',\r\n    CLOUDY_PERIODS = 'Cloudy periods',\r\n    RAIN_OR_DRIZZLE = 'Rain or drizzle',\r\n    RAIN_AT_TIMES_HEAVY_OR_DRIZZLE = 'Rain at times heavy or drizzle',\r\n    RAIN_AT_TIMES_HEAVY = 'Rain at times heavy',\r\n    A_FEW_SHOWERS_OR_DRIZZLE = 'A few showers or drizzle',\r\n    SHOWERS_OR_DRIZZLE = 'Showers or drizzle',\r\n    A_FEW_SHOWERS = 'A few showers',\r\n    CLEARING = 'Clearing',\r\n    FOG_DISSIPATING = 'Fog dissipating',\r\n    INCREASING_CLOUDINESS = 'Increasing cloudiness',\r\n    CHANCE_OF_RAIN_SHOWERS_OR_FLURRIES = 'Chance of rain showers or flurries',\r\n    CHANCE_OF_FLURRIES = 'Chance of flurries',\r\n    SNOW_OR_RAIN = 'Snow or rain',\r\n    RAIN_OR_SNOW = 'Rain or snow',\r\n    CHANCE_OF_FLURRIES_OR_RAIN_SHOWERS = 'Chance of flurries or rain showers',\r\n    FLURRIES_OR_RAIN_SHOWERS = 'Flurries or rain showers',\r\n    PERIODS_OF_RAIN_MIXED_WITH_SNOW = 'Periods of rain mixed with snow',\r\n    A_FEW_FLURRIES = 'A few flurries',\r\n    PERIODS_OF_SNOW = 'Periods of snow',\r\n    PERIODS_OF_RAIN_OR_DRIZZLE = 'Periods of rain or drizzle',\r\n    CHANCE_OF_DRIZZLE_OR_RAIN = 'Chance of drizzle or rain',\r\n    OVERCAST = 'Overcast'\r\n\r\n}\r\n","import { Observable , of, throwError} from 'rxjs';\r\nimport { retryWhen , delay, mergeMap} from 'rxjs/operators';\r\n\r\nexport function delayedRetry(delayMs: number, maxRetry: number){\r\n    let retries = maxRetry;\r\n\r\n    return (src: Observable<any> ) => \r\n    src.pipe(\r\n        retryWhen( (errors: Observable<any> ) => errors.pipe(\r\n            delay(delayMs),\r\n            mergeMap(error => retries-- > 0 ? of(error) : throwError(maxRetry)\r\n            ))\r\n        )\r\n    );\r\n}","import { Icons } from './../_enums/icons';\r\n\r\n// get the string name from the Icons to fetch the file\r\nexport function getIconsFromString(iconStringName: string): Icons {\r\n    let returnedIcon: Icons;\r\n\r\n    // tslint:disable-next-line: forin\r\n    for (const icon in Icons) {\r\n\r\n        const ico = Icons[icon] as string;\r\n\r\n        if (iconStringName.toUpperCase() === ico.toUpperCase()) {\r\n            returnedIcon = Icons[icon];\r\n            break;\r\n        }\r\n        // console.log(\"values--> \", iconStringName, icon, ico, returnedIcon);\r\n\r\n    }\r\n\r\n    if (returnedIcon == null){\r\n        returnedIcon = Icons.NA;\r\n    }\r\n\r\n    return returnedIcon;\r\n}","import { ConfigService } from './../services/config.service';\r\n\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ConfigAccess implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private cfg: ConfigService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        // const currentUser = this.authSvc.getCurrentUser();\r\n        const auth = this.cfg.authenticated;\r\n        console.log('Config authenticated: ' , auth);\r\n        if (auth) {\r\n            // console.log(\"User logged in\");\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that the input is a number\r\nexport function numberValidator(controlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n\r\n        const control = formGroup.controls[controlName];\r\n        if (control.errors && !control.errors.mustBeNumber) {\r\n            // return if another validator has already found an error on the number\r\n            return;\r\n        }\r\n\r\n        const nbr = control.value;\r\n        if (!nbr.toString().match(/^[0-9]+(\\.?[0-9]+)?$/)) {\r\n            control.setErrors({ mustBeNumber: true });\r\n        } else {\r\n            control.setErrors(null);\r\n        }\r\n\r\n    }\r\n}","export class Constants{\r\n    public static FULL_SCREEN_INDX = 98;\r\n    public static BACK_INDX = 99;\r\n\r\n    public static LOG_FILE_NAME_STORAGE = 'logFileName';\r\n    public static WEATHER_LOG_FILENAME = 'WeatherLog';\r\n}","export class WeatherError{\r\n    key: string;\r\n    title: string;\r\n    message: string;\r\n\r\n    public constructor(key: string, title: string, message: string){\r\n        this.key = key;\r\n        this.title = title;\r\n        this.message = message;\r\n    }\r\n}","import { ConfigAccess } from './_helpers/config.access';\nimport { WeatherConfigComponent } from './weather-config/weather-config.component';\nimport { WeatherAlertComponent } from './weather-alert/weather-alert.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WeatherExtendedComponent } from './weather-extended/weather-extended.component';\n\nconst routes: Routes = [\n  { path: '', component: WeatherComponent },\n  { path: 'extForecast', component: WeatherExtendedComponent },\n  { path: 'alert', component: WeatherAlertComponent },\n  { path: 'config', component: WeatherConfigComponent, canActivate: [ConfigAccess] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Constants } from './_model/constants';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'weather';\n\n  constructor(){\n    // get from local storage to see if we have stored a logFileName.\n    const logFileName = localStorage.getItem(Constants.LOG_FILE_NAME_STORAGE);\n    if (!logFileName){\n      const logF = `AngWeatherLog${Math.floor((Math.random() * 1000) + 1)}`;\n      localStorage.setItem(Constants.LOG_FILE_NAME_STORAGE, logF);\n      Constants.WEATHER_LOG_FILENAME = logF;\n    }else{\n      Constants.WEATHER_LOG_FILENAME = logFileName;\n    }\n\n    console.log('Log name: ' , Constants.WEATHER_LOG_FILENAME);\n\n  }\n  ngOnInit(): void {\n   \n  }\n\n\n\n}\n","\r\n<router-outlet></router-outlet> ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { WeatherComponent } from './weather/weather.component';\nimport { WeatherExtendedComponent } from './weather-extended/weather-extended.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastComponent } from './toast/toast.component';\nimport { WeatherAlertComponent } from './weather-alert/weather-alert.component';\nimport { WeatherConfigComponent } from './weather-config/weather-config.component';\nimport { PasswordModalComponent } from './password-modal/password-modal.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponent,\n    WeatherExtendedComponent,\n    ToastComponent,\n    WeatherAlertComponent,\n    WeatherConfigComponent,\n    PasswordModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FontAwesomeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators  } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConfigService } from '../services/config.service';\n\n@Component({\n  selector: 'app-password-modal',\n  templateUrl: './password-modal.component.html',\n  styleUrls: ['./password-modal.component.css']\n})\nexport class PasswordModalComponent implements  OnInit {\n\n  error: string;\n  passwordForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, public activeModal: NgbActiveModal, private cfg: ConfigService) { }\n\n  ngOnInit(): void {\n    this.passwordForm = this.formBuilder.group({\n      frm_password: ['', [Validators.required, Validators.minLength(2)]]\n    });\n  }\n\n  submitForm(): void {\n\n    this.error = undefined;\n\n    const validPass = this.cfg.passwordValid(this.passwordForm.value.frm_password);\n\n    if (validPass){\n      this.cfg.authenticated = true;\n      this.activeModal.close('ValidPassword');\n\n    } else {\n      this.error = 'Password invalid';\n    }\n\n\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">Config password</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n        <i class=\"fas fa-times\">X</i>\n    </button>\n</div>\n<form [formGroup]=\"passwordForm\" (submit)=\"submitForm()\">\n    <div class=\"modal-boy\">\n        <div class=\"container\">\n            <div class=\"form-group\">\n                <label for=\"groupName\">Password</label>\n                <input id=\"groupName\" type=\"text\" formControlName=\"frm_password\" class=\"form-control\"  />\n                <p *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</p>\n            </div>            \n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn btn-success\" [disabled]=\"!passwordForm.valid\">\n            Next\n        </button>\n    </div>\n</form>","import { BehaviorSubject, Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nexport class City {\n  key: string;\n  nameEn: string;\n  nameFr: string;\n  lat: string;\n  long: string;\n  dist: string;\n}\n\nexport class Config{\n\n  constructor(public currentCity: string, public refreshTime: number){}\n\n  setCurrentCity(city): void{\n    this.currentCity = city;\n  }\n\n  setRefreshTime(time: number): void{\n    this.refreshTime = time;   // (in minutes)\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  private configPass = 'kitty12345';\n  private configFields: Config;\n\n  private configUpdate: BehaviorSubject<Config>;\n  private weatherCity: BehaviorSubject<City[]>;\n\n  isConfigUpdated = false;\n\n  authenticated = false;\n\n  constructor(private http: HttpClient) {\n\n// check for any stored city\n    const config: Config = JSON.parse(localStorage.getItem('weatherCity')) ;\n    if (config === undefined || config == null ){\n      this.configFields = new Config('on-118', 10);\n    }else{\n      this.configFields = new Config(config.currentCity, config.refreshTime);\n    }\n\n    this.weatherCity = new BehaviorSubject<City[]>([]);\n    this.configUpdate = new BehaviorSubject<Config>(this.configFields);\n  }\n\n  passwordValid(pass: string): boolean {\n    return this.configPass === pass;\n  }\n\n  getEnvCanCity(): Observable<City[]> {\n    if (this.weatherCity.getValue().length === 0) {\n      console.log('getFromWeb');\n      // const options = { responseType: 'text' as 'text' };\n      // return cities , but first pipe it and map it to save it to cache.\n      this.http.get<City[]>('http://192.168.1.110:8081/web/temperature/envCanCities').subscribe(result => {\n\n        // console.log(\"Result: \" , result);\n        const cc: City[] = result;\n        this.weatherCity.next(cc);\n\n      },\n      error => {\n        console.log('erorr in config,', error);       \n      });\n    }\n    return this.weatherCity.asObservable();\n  }\n\n  getCurrentCity(): string {\n    return this.configFields.currentCity;\n  }\n  getRefreshTimeMinutes(): number {\n    return this.configFields.refreshTime;\n  }\n  getRefreshTimeMillis(): number {\n    return this.configFields.refreshTime * 1000 * 60;\n  }\n\n  configUpdated(): Observable<Config>{\n    return this.configUpdate;\n  }\n\n  updateConfig(currentCity: string, refreshTime: number): void {\n\n    if (this.configFields.currentCity !== currentCity) {\n      this.configFields.setCurrentCity(currentCity);\n      this.isConfigUpdated = true;\n    }\n    if (this.configFields.refreshTime !== refreshTime) {\n      this.configFields.setRefreshTime(refreshTime);\n      this.isConfigUpdated = true;\n    }\n\n    if (this.configUpdate){\n      console.log('this.configFields', this.configFields);\n      localStorage.setItem('weatherCity', JSON.stringify(this.configFields));\n      this.configUpdate.next(this.configFields);\n    }\n  }\n\n}\n","import { Cycle } from './../_enums/cycle';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { timer, Observable, EMPTY, Subscription } from 'rxjs';\nimport { flatMap, catchError } from 'rxjs/operators';\nimport { delayedRetry } from '../_helpers/HttpHelper';\nimport { WeatherError } from '../_model/weatherError';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DayNightCycleService {\n\n\n  cycle: Cycle;\n  cycleTimer: Subscription;\n\n  constructor(private http: HttpClient, private configService: ConfigService) {\n\n    this.configService.configUpdated().subscribe(newConfig => {\n      this.dayNightCycleTimer();\n    });\n  }\n\n // timer that  get the weather every 5 minutes.\n private dayNightCycleTimer(): void {\n\n  if (this.cycleTimer){\n    this.cycleTimer.unsubscribe();\n  }\n\n  this.cycleTimer = timer(1000, this.configService.getRefreshTimeMillis() ).pipe(\n    flatMap(() => this.fetchCycle())).subscribe(cycleData => {\n    console.log('cycle data: ' , cycleData);\n\n    if(cycleData.cycle === 'DAY'){\n      this.cycle = Cycle.DAY;\n    }else  if(cycleData.cycle === 'NIGHT'){\n      this.cycle = Cycle.NIGHT;\n    }else{\n      this.cycle = Cycle.NA;\n    }\n\n  },\n    cycleError => {\n      this.cycle = Cycle.NA;\n      console.log('cycleError svc', cycleError);\n    });\n}\n\nprivate fetchCycle(): Observable<any> {\n\n  return this.http.get<any>('http://192.168.1.110:8081/web/date/dayNightCycle/45.41117/-75.69812').pipe(\n    delayedRetry(5000, 5),\n    catchError(err => {\n      const wError = new WeatherError('Retries', 'Retries failure', 'Number of retries exceeded for day night cycle. Cannot connect to server ');\n      return EMPTY;\n    }\n    )\n  );\n\n}\n\n}\n","import { Cycle } from './../_enums/cycle';\nimport { DayNightCycleService } from './day-night-cycle.service';\nimport { Forecast } from './../_model/forecast';\nimport { BackImage } from './../_enums/bckImage';\nimport { Injectable } from '@angular/core';\nimport { Icons } from '../_enums/icons';\nimport { getIconsFromString } from './../_helpers/IconHelper';\n\nexport class ImageMap {\n  public constructor(private imageNameDay: string, private imageNameNight: string) { }\n\n  public getImage(cycle: Cycle): string {\n    return cycle === Cycle.NIGHT ? this.imageNameNight : this.imageNameDay;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  private envCanWeatherIconMap: Map<Icons, ImageMap>; // map containing name of the weather icon and their file names\n  private envCanBackgroundImgMap: Map<BackImage, ImageMap>;\n\n  pathToIcon = 'assets/icon/';\n  pathToBackground = 'assets/bck/';\n\n  constructor(private cycleService: DayNightCycleService) {\n    // build map for Env canada\n    this.buildIconMap();\n    this.buildBackgroundMap();\n  }\n\n  getWeatherIcon(weather: string): string {\n    /* return the weather icon based on the weather condition. Looking for keywords */\n    const icn = this.envCanWeatherIconMap.get(getIconsFromString(weather)).getImage(this.cycleService.cycle);\n\n    return this.pathToIcon.concat(icn);\n  }\n\n  getIconsForForecast(forecasts: Forecast[]): Forecast[] {\n\n    for (const f of forecasts) {\n      if (f.dayOfWeek.search('night') !== -1) {\n        f.iconLink = this.pathToIcon + this.envCanWeatherIconMap.get(getIconsFromString(f.weather)).getImage(Cycle.NIGHT);\n      } else {\n        f.iconLink = this.pathToIcon + this.envCanWeatherIconMap.get(getIconsFromString(f.weather)).getImage(Cycle.DAY);\n      }\n    }\n    return forecasts;\n  }\n\n  getBackgroundImage(weather: string): string {\n\n    let image = '';\n    if (weather.search('Rain') !== -1) {\n      image = this.envCanBackgroundImgMap.get(BackImage.RAIN).getImage(this.cycleService.cycle);\n    } else if (weather.search('Sunny') !== -1) {\n      image = this.envCanBackgroundImgMap.get(BackImage.SUNNY).getImage(this.cycleService.cycle);\n    } else if (weather.search('Cloudy') !== -1) {\n      image = this.envCanBackgroundImgMap.get(BackImage.CLOUDY).getImage(this.cycleService.cycle);\n    } else if (weather.search('Thunder') !== -1) {\n      image = this.envCanBackgroundImgMap.get(BackImage.THUNDER).getImage(this.cycleService.cycle);\n    } else if (weather.search('Snow') !== -1) {\n      image = this.envCanBackgroundImgMap.get(BackImage.SNOW).getImage(this.cycleService.cycle);\n    } else if (weather.search('Fog') !== -1 || weather.search('Mist') !== -1)   {\n      image = this.envCanBackgroundImgMap.get(BackImage.FOG).getImage(this.cycleService.cycle);\n    } else {\n      image = this.envCanBackgroundImgMap.get(BackImage.SUNNY).getImage(this.cycleService.cycle);\n    }\n    // console.log('getBackgroundImage: ', this.pathToBackground, image, weather);\n    return this.pathToBackground.concat(image);\n  }\n\n  private buildBackgroundMap(): void {\n    this.envCanBackgroundImgMap = new Map([\n      [BackImage.CLOUDY, new ImageMap('cloudy-day.jpg', 'cloudy-night.jpg')],\n      [BackImage.SUNNY, new ImageMap('sunny.jpg', 'clear-night.jpg')],\n      [BackImage.THUNDER, new ImageMap('thunder-day.jpg', 'thunder-night.jpg')],\n      [BackImage.SNOW, new ImageMap('snowing-day.jpg', 'snow-night.jpg')],\n      [BackImage.RAIN, new ImageMap('rain.jpg', 'rain-night.jpg')],\n      [BackImage.FOG, new ImageMap('fog-day.jpg', 'fog-night.jpg')],\n    ]);\n  }\n\n  private buildIconMap(): void {\n    // build map of env canada weather summary to their respective icons file name\n    this.envCanWeatherIconMap = new Map([\n      [Icons.NA, new ImageMap('not-available.png', 'not-available.png')],\n      [Icons.CLOUDY, new ImageMap('cloudy.svg', 'cloudy.svg')],\n      [Icons.MOSTLY_CLOUDY, new ImageMap('cloudy-day-3.svg', 'cloudy-night-3.svg')],\n      [Icons.SUNNY, new ImageMap('day.svg', 'night.svg')],\n      [Icons.MAINLY_SUNNY, new ImageMap('cloudy-day-1.svg', 'cloudy-night-1.svg')],\n      [Icons.FOG, new ImageMap('cloudy.svg', 'cloudy.svg')],\n      [Icons.LIGHT_RAIN, new ImageMap('rainy-4.svg', 'rainy-4.svg')],\n      [Icons.LIGHT_SNOW, new ImageMap('snowy-4.svg', 'snowy-4.svg')],\n      [Icons.MIST, new ImageMap('cloudy.svg', 'cloudy.svg')],\n      [Icons.PARTYL_CLOUDY, new ImageMap('cloudy-day-2.svg', 'cloudy-night-2.svg')],\n      [Icons.RAIN, new ImageMap('rainy-5.svg', 'rainy-5.svg')],\n      [Icons.CLEAR, new ImageMap('day.svg', 'night.svg')],\n      [Icons.CHANCE_OF_SHOWERS, new ImageMap('rainy-2.svg', 'rainy-5.svg')],\n      [Icons.A_MIX_OF_SUN_AND_CLOUD, new ImageMap('cloudy-day-2.svg', 'cloudy-night-2.svg')],\n      [Icons.PERIODS_OF_RAIN, new ImageMap('rainy-5.svg', 'rainy-5.svg')],\n      [Icons.SHOWERS, new ImageMap('rainy-6.svg', 'rainy-6.svg')],\n      [Icons.A_FEW_CLOUDS, new ImageMap('cloudy-day-1.svg', 'cloudy-night-1.svg')],\n      [Icons.CLOUDY_PERIODS, new ImageMap('cloudy-day-3.svg', 'cloudy-night-3.svg')],\n      [Icons.LIGHT_DRIZZLE, new ImageMap('rainy-4.svg', 'rainy-4.svg')],\n      [Icons.MAINLY_CLEAR, new ImageMap('cloudy-day-1.svg', 'cloudy-night-1.svg')],\n      [Icons.LIGHT_RAIN_AND_FOG, new ImageMap('rainy-4.svg', 'rainy-4.svg')],\n      [Icons.RAIN_OR_DRIZZLE, new ImageMap('rainy-5.svg', 'rainy-5.svg')],\n      [Icons.RAIN_AT_TIMES_HEAVY_OR_DRIZZLE, new ImageMap('rainy-6.svg', 'rainy-6.svg')],\n      [Icons.RAIN_AT_TIMES_HEAVY, new ImageMap('rainy-6.svg', 'rainy-6.svg')],\n      [Icons.A_FEW_SHOWERS_OR_DRIZZLE, new ImageMap('rainy-4.svg', 'rainy-4.svg')],\n      [Icons.SHOWERS_OR_DRIZZLE, new ImageMap('rainy-6.svg', 'rainy-6.svg')],\n      [Icons.A_FEW_SHOWERS, new ImageMap('rainy-5.svg', 'rainy-5.svg')],\n      [Icons.LIGHT_RAINSHOWER, new ImageMap('rainy-4.svg', 'rainy-4.svg')],\n      [Icons.HAZE, new ImageMap('cloudy.svg', 'cloudy.svg')],\n      [Icons.FOG_PATCHES, new ImageMap('cloudy.svg', 'cloudy.svg')],\n      [Icons.CLEARING, new ImageMap('day.svg', 'night.svg')],\n      [Icons.FOG_DISSIPATING, new ImageMap('cloudy-day-3.svg', 'cloudy-night-3.svg')],\n      [Icons.INCREASING_CLOUDINESS, new ImageMap('cloudy-day-1.svg', 'cloudy-night-1.svg')],\n      [Icons.THUNDERSTORM_WITH_LIGHT_RAINSHOWERS, new ImageMap('thunder.svg', 'thunder.svg')],\n      [Icons.CHANCE_OF_RAIN_SHOWERS_OR_FLURRIES, new ImageMap('snowy-1.svg', 'snowy-4.svg')],\n      [Icons.CHANCE_OF_FLURRIES, new ImageMap('snowy-1.svg', 'snowy-4.svg')],\n      [Icons.SNOW_OR_RAIN, new ImageMap('snowy-1.svg', 'snowy-4.svg')],\n      [Icons.LIGHT_SNOWSHOWER, new ImageMap('snowy-2.svg', 'snowy-5.svg')],\n      [Icons.RAIN_OR_SNOW, new ImageMap('snowy-1.svg', 'snowy-4.svg')],\n      [Icons.CHANCE_OF_FLURRIES_OR_RAIN_SHOWERS, new ImageMap('snowy-1.svg', 'snowy-4.svg')],\n      [Icons.FLURRIES_OR_RAIN_SHOWERS, new ImageMap('snowy-1.svg', 'snowy-4.svg')],\n      [Icons.PERIODS_OF_RAIN_MIXED_WITH_SNOW, new ImageMap('rainy-2.svg', 'rainy-5.svg')],\n      [Icons.A_FEW_FLURRIES, new ImageMap('snowy-1.svg', 'snowy-4.svg')],\n      [Icons.PERIODS_OF_SNOW, new ImageMap('snowy-2.svg', 'snowy-5.svg')],\n      [Icons.PERIODS_OF_RAIN_OR_DRIZZLE, new ImageMap('rainy-2.svg', 'rainy-5.svg')],\n      [Icons.CHANCE_OF_DRIZZLE_OR_RAIN, new ImageMap('rainy-2.svg', 'rainy-5.svg')],\n      [Icons.SNOW, new ImageMap('snowy-6.svg', 'snowy-6.svg')],\n      [Icons.OVERCAST, new ImageMap('cloudy.svg', 'cloudy.svg')]\n    ]);\n  }\n\n}\n","// toast.service.ts\nimport { Injectable, TemplateRef  } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  toasts: any[] = [];\n  fullscreen = false;\n\n  // Push new Toasts to array with content and options\n  show(textOrTpl: string | TemplateRef<any>, options: any = {}) {\n    this.toasts.push({ textOrTpl, ...options });\n  }\n\n  // Callback method to remove Toast DOM element from view\n  remove(toast): void {\n    this.toasts = this.toasts.filter(t => t !== toast);\n  }\n\n  show2(): void {\n    console.log(\"toasts: \" , this.toasts);\n  }\n  // Callback method to remove Toast DOM element from view\n  remove2(key: number): void  {\n    this.toasts = this.toasts.filter(t => t.removeKey !== key);\n  }\n\n\n}\n","import { ConfigService } from './config.service';\nimport { WeatherError } from './../_model/weatherError';\nimport { WeatherInfo } from './../_model/weatherInfo';\nimport { delayedRetry } from './../_helpers/HttpHelper';\nimport { Injectable, OnDestroy } from '@angular/core';\n\nimport { Observable, BehaviorSubject, timer, EMPTY, Subscription } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { flatMap, catchError } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService implements  OnDestroy {\n\n  loading = true;\n\n  wthTimer: Subscription;\n  configSub: Subscription;\n\n  private fullWeather: BehaviorSubject<WeatherInfo>;\n  private wthError: BehaviorSubject<WeatherError>;\n\n  constructor(private http: HttpClient, private configService: ConfigService) {\n\n    this.fullWeather = new BehaviorSubject<WeatherInfo>(null);\n    this.wthError = new BehaviorSubject<WeatherError>(null);\n    \n    this.configSub = this.configService.configUpdated().subscribe(newConfig => {\n      this.weatherTimer();\n    });\n  }\n\n  getFullWeather(): Observable<WeatherInfo> {\n    return this.fullWeather.asObservable();\n  }\n\n  // if any error generated by the weather service\n  errorGenerated(): Observable<WeatherError> {\n    return this.wthError.asObservable();\n  }\n\n  // timer that  get the weather every 5 minutes.\n  private weatherTimer(): void {\n\n    if (this.wthTimer) {\n      this.wthTimer.unsubscribe();\n    }\n\n    this.wthTimer = timer(0, this.configService.getRefreshTimeMillis()).pipe(flatMap(() => this.fetchFullWeather())).subscribe(wthData => {\n      this.loading = false;\n      this.fullWeather.next(wthData);\n    },\n      weatherError => {\n        this.loading = false;\n        console.log('weatherError svc', weatherError);\n        const wError = new WeatherError('Unexpected', 'Unexpected error', 'Timer in weather service caught error, see logs.');\n        this.wthError.next(wError);\n      });\n  }\n\n  private fetchFullWeather(): Observable<WeatherInfo> {\n    console.log('fetchFullWeather', new Date());\n    this.loading = true;\n    return this.http.get<WeatherInfo>(`http://192.168.1.110:8081/web/temperature/weather/${this.configService.getCurrentCity()}/yes`).pipe(\n      delayedRetry(5000, 5),\n      catchError(err => {\n        this.loading = false;\n        const wError = new WeatherError('Retries', 'Retries failure', 'Number of retries exceeded. Cannot connect to server ');\n        this.wthError.next(wError);\n        return EMPTY;\n      }\n      )\n    );\n\n  }\n  ngOnDestroy(): void {\n    this.configSub.unsubscribe();\n    this.wthTimer.unsubscribe();\n  }\n\n}\n","import { Constants } from '../_model/constants';\nimport { ToastService } from './../services/toast.service';\nimport {Component, Inject, TemplateRef} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-toast',\n  template: `\n    <ngb-toast\n      *ngFor=\"let toast of toastService.toasts\"\n      [header]=\"toast.headertext\"\n      [class]=\"toast.classname\"\n      [autohide]=\"toast.autohide\"\n      [delay]=\"toast.delay || 5000\"\n      (hide)=\"toastService.remove(toast)\"\n      (click)=\"action(toast.navigate)\"\n    >\n      <ng-template [ngIf]=\"isTemplate(toast)\" [ngIfElse]=\"text\">\n        <ng-template [ngTemplateOutlet]=\"toast.textOrTpl\"></ng-template>\n      </ng-template>\n\n      <ng-template #text>{{ toast.textOrTpl }}</ng-template>\n    </ngb-toast>\n  `,\n  host: {'[class.ngb-toasts]': 'true'}\n})\nexport class ToastComponent {\n  elem;\n  constructor(public toastService: ToastService, @Inject(DOCUMENT) private document: any, private router: Router,) {}\n\n  isTemplate(toast): boolean { return toast.textOrTpl instanceof TemplateRef; }\n\n  fullScreen(): void{\n    this.elem = document.documentElement;\n\n    if (this.elem.requestFullscreen) {\n      this.elem.requestFullscreen();\n    } else if (this.elem.mozRequestFullScreen) {\n      /* Firefox */\n      this.elem.mozRequestFullScreen();\n    } else if (this.elem.webkitRequestFullscreen) {\n      /* Chrome, Safari and Opera */\n      this.elem.webkitRequestFullscreen();\n    } else if (this.elem.msRequestFullscreen) {\n      /* IE/Edge */\n      this.elem.msRequestFullscreen();\n    }\n\n    this.toastService.remove2(Constants.FULL_SCREEN_INDX);\n\n  }\n\n  action(navigate: string): void{\n\n    if (navigate === 'fullscreen'){\n      this.fullScreen();\n    }else{\n      this.router.navigate([navigate]);\n      this.toastService.remove2(Constants.BACK_INDX);\n    }\n  }\n}","import { Constants } from '../_model/constants';\nimport { WeatherService } from './../services/weather.service';\nimport { WeatherAlert } from './../_model/weatherAlert';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { ToastService } from '../services/toast.service';\n\n@Component({\n  selector: 'app-weather-alert',\n  templateUrl: './weather-alert.component.html',\n  styleUrls: ['./weather-alert.component.css']\n})\nexport class WeatherAlertComponent implements OnInit, OnDestroy {\n\n  wthSubscription: Subscription;\n  alert: WeatherAlert;\n\n  timer: number;\n\n  constructor(private weatherSvc: WeatherService, private router: Router, private toastService: ToastService,) { }\n\n\n  ngOnInit(): void {\n\n    this.wthSubscription = this.weatherSvc.getFullWeather().subscribe(weatherData => {\n      if (weatherData && weatherData.alert) {\n        this.alert = weatherData.alert;\n      }\n    });\n\n    setTimeout(() => { this.enableBackToaster(); }, 500); // remove preloader\n\n    this.timer = setTimeout(() => {\n      this.router.navigate(['/']);\n      this.toastService.remove2(Constants.BACK_INDX);\n    }, 45000);  //45s\n  }\n\n\n  enableBackToaster(): void {\n    this.toastService.show('Back', {\n      classname: 'bg-success text-light',\n      autohide: false,\n      navigate: '/',\n      removeKey: Constants.BACK_INDX\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.wthSubscription.unsubscribe();\n    clearTimeout(this.timer);\n  }\n\n}\n","<div class=\"container-fluid\" class=\"backg\">\n    <app-toast></app-toast>\n    <div class=\"row\">\n        <div class=\"col-md-12 mt-1\">\n            <div class=\"jumbotron card card-block ml-1  mr-1\" style=\"padding: 10px 8px 10px 08px; \">\n                <h3 style=\"font-size: 4vw\">\n                    {{alert.title}}\n                </h3>\n                <p style=\"font-size: 2vw\" [innerHTML]=\"alert.message\">\n                </p>\n            </div>\n        </div>\n    </div>\n</div>","\nimport { numberValidator } from 'src/app/_helpers/number.validator';\nimport { City, ConfigService } from './../services/config.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-weather-config',\n  templateUrl: './weather-config.component.html',\n  styleUrls: ['./weather-config.component.css']\n})\nexport class WeatherConfigComponent implements OnInit {\n\n\n  cityList: City[] = [];\n\n  configForm: FormGroup;\n  error: string;\n\n  submit = false;\n  loadingCities = true;\n\n\n  constructor(private formBuilder: FormBuilder, private cfg: ConfigService, private router: Router) {\n    }\n\n  ngOnInit(): void {\n    this.configForm = this.formBuilder.group({\n      city: [this.cfg.getCurrentCity(), [Validators.required]],\n      frm_refresh: [this.cfg.getRefreshTimeMinutes(), [Validators.required, Validators.min(1), Validators.max(60)]]\n    }, {\n      validator: numberValidator('frm_refresh')\n    });\n\n    this.cfg.getEnvCanCity().subscribe(\n      cities => {\n        this.cityList = cities;\n        this.loadingCities = false;\n      },\n      fetchError => {\n        console.log('City fetch error', fetchError);\n        this.error = 'Error fetching cities';\n      }\n    )\n  }\n\n  onSubmit(): void {\n    console.log('onSubmit', this.configForm.value);\n\n    if (this.configForm.invalid) {\n      return;\n    }\n    this.submit = true;\n\n    const formValue = this.configForm.value;\n\n    this.cfg.updateConfig(formValue.city, Number(formValue.frm_refresh));\n    this.router.navigate(['/']);\n\n  }\n\n  onCancel(): void {\n    this.router.navigate(['/']);\n  }\n\n}\n","<div class=\"container-fluid\" class=\"backg\">\n    <div class=\"row\">\n        <div class=\"col-md-12 mt-1\">\n            <div class=\"jumbotron card card-block ml-1  mr-1\" style=\"padding: 10px 8px 10px 08px;  height: 99vh;\">\n                <h1 style=\"color:white\">Weather Configuration </h1>\n                <form [formGroup]=\"configForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"col-md-3\">\n                    <div class=\"form-group\">\n                        <label>City:</label>\n                        <select formControlName=\"city\" class=\"form-control\">\n                            <option *ngFor=\"let city of cityList\" [ngValue]=\"city.key\">\n                              {{ city.nameEn }}\n                            </option>\n                          </select>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Refresh time:</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"frm_refresh\" />\n                        <div *ngIf=\"configForm.controls.frm_refresh.errors?.mustBeNumber\" class=\"alert alert-danger\">Only numbers are accepted</div>\n                        <div *ngIf=\"configForm.controls.frm_refresh.errors?.min || \n                        configForm.controls.frm_refresh.errors?.max\" class=\"alert alert-danger\">Number must be between 0 and 60</div>\n                    </div>\n                    <button type=\"button\" class=\"btn btn-secondary mr-1\" (click)=\"onCancel()\">cancel</button>\n                    <button type=\"submit\" [disabled]=\"submit || configForm.invalid\" class=\"btn btn-primary\">Save\n                    \n                     <span *ngIf=\"submit\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n               </button>\n                    \n                </div>\n            </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Constants } from '../_model/constants';\nimport { WeatherError } from './../_model/weatherError';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ToastService } from '../services/toast.service';\nimport { WeatherService } from '../services/weather.service';\nimport { WeatherInfo } from '../_model/weatherInfo';\nimport { Router } from '@angular/router';\nimport { ImageService } from '../services/image-service.service';\n\n@Component({\n  selector: 'app-weather-extended',\n  templateUrl: './weather-extended.component.html',\n  styleUrls: ['./weather-extended.component.css']\n})\nexport class WeatherExtendedComponent implements OnInit, OnDestroy {\n  wthSubscription: Subscription;\n  forecast: WeatherInfo;\n  wthErrors: WeatherError;\n\n  timer: number;\n\n  constructor(private weatherSvc: WeatherService, private toastService: ToastService, private router: Router,\n    private imageService: ImageService) { }\n\n  ngOnInit(): void {\n\n    setTimeout(() => { this.enableBackToaster(); }, 500); // remove preloader\n\n    this.timer = setTimeout(() => {\n      this.router.navigate(['/']);\n      this.toastService.remove2(Constants.BACK_INDX);\n    }, 45000);  // 45s\n\n     // get weather!!\n    this.wthSubscription = this.weatherSvc.getFullWeather().subscribe(weatherData => {\n      console.log('Getting extended forecast', new Date());\n      this.forecast = weatherData;\n      this.wthErrors = null;\n      if (this.forecast){ // populate weather icons for the forecast\n       this.forecast.forecast =  this.imageService.getIconsForForecast(this.forecast.forecast);\n      }\n    });\n\n    this.toastService.remove2(Constants.BACK_INDX);\n  }\n\n  enableBackToaster(): void {\n    this.toastService.show('Back', {\n      classname: 'bg-success text-light',\n      autohide: false,\n      navigate: '/',\n      removeKey: Constants.BACK_INDX\n    });\n  }\n\n\n\n  ngOnDestroy(): void {\n    this.wthSubscription.unsubscribe();\n    clearTimeout(this.timer);\n  }\n\n}\n","<div class=\"container-fluid\" class=\"backg\">\n    <app-toast></app-toast>\n    <div class=\"row\">\n        <div class=\"col-md-12 mt-1\">\n            <table class=\"ml-3 mr-2\">\n                <tr *ngFor=\"let wth of forecast?.forecast | slice:1\" style=\"height:100px;margin-left: 10px;\">\n                    <td style=\"width:150px;color: white;font-size: 2vw;text-align: center;\">\n                        {{wth.dayOfWeek}}\n                    </td>\n                    <td>\n                        <img alt=\"weather\" width=\"128\" height=\"128\" [src]=\"wth.iconLink\" class=\" rounded-circle\" />\n                  \n                    </td>\n                    <td style=\"color: white;font-size: 2vw; width: 95%\"> {{wth.forecast}}</td>\n                </tr>\n            </table>\n            <!-- <div class=\"jumbotron card card-block ml-1 \" style=\" padding: 10px 8px 10px 08px;height: 100px;\" > TEXT</div> -->\n        </div>\n    </div>\n</div>","import { ImageService } from './../services/image-service.service';\nimport { Constants } from '../_model/constants';\nimport { AlertLvl } from '../_enums/alertsLvl';\nimport { WeatherInfo } from './../_model/weatherInfo';\nimport { ToastService } from './../services/toast.service';\nimport { WeatherService } from './../services/weather.service';\nimport { Component, OnInit, OnDestroy, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { WeatherError } from '../_model/weatherError';\nimport { Subscription } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { PasswordModalComponent } from '../password-modal/password-modal.component';\nimport { faSwimmingPool, faWarehouse } from '@fortawesome/free-solid-svg-icons';\n\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit, OnDestroy {\n\n\n  //font awesome icon\n  faWarehouse = faWarehouse;\n  faSwimming = faSwimmingPool;\n\n  title = 'weather';\n  fullWeather: WeatherInfo;\n  wthErrors: WeatherError;\n  wthSubscription: Subscription;\n  weatherIcon: string;\n\n  // scrollUp; //timer for scrolling up.. \n  currDateTimer;\n  currDate: Date;\n  obsDate: Date;\n\n  //temporary temperature\n  poolTemp: string;\n\n  constructor(private router: Router, private wsApi: WeatherService,\n    private toastService: ToastService, private renderer: Renderer2, private imageService: ImageService,\n    private modalService: NgbModal) {\n\n  }\n\n  ngOnInit(): void {\n    //start date\n    this.currDate = new Date();\n    this.currDateTimer = setInterval(() => { this.currDate = new Date(); }, 1000);\n    // get weather from service\n    this.wthSubscription = this.wsApi.getFullWeather().subscribe(weatherData => {\n      this.fullWeather = weatherData;\n      this.wthErrors = null;\n      if (this.fullWeather) {\n        // console.log(this.fullWeather);\n        this.weatherIcon = this.imageService.getWeatherIcon(this.fullWeather.weather);\n        this.changeBackgroundImage();\n        this.filterSensors();\n        this.obsDate = new Date(this.fullWeather.observationTime);\n        // console.log('temp: ' , this.fullWeather.localtemp.tempMap.GARAGE, this.fullWeather.localtemp.tempDateMap.GARAGE);\n\n      }\n    });\n\n    // verify if we have any errors\n    this.wsApi.errorGenerated().subscribe(wthErr => {\n      if (wthErr != null) {\n        this.wthErrors = wthErr;\n        this.fullWeather = null;\n      }\n    });\n  }\n  // load up full forecast to display.\n  fullForecast(): void {\n    this.router.navigate(['/extForecast']);\n  }\n\n  showRedToast(): void {\n\n    this.toastService.show('Garage Door Open', {\n      classname: 'bg-danger text-light',\n      delay: 150000,\n      autohide: true,\n      removeKey: 1\n    });\n  }\n  // show toaster for full screen\n  enableFullScreenToaster(): void {\n    this.toastService.show('Enable Full screen', {\n      classname: 'bg-success text-light  toast-custom',\n      autohide: false,\n      navigate: 'fullscreen',\n      removeKey: Constants.FULL_SCREEN_INDX\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.wthSubscription.unsubscribe();\n    clearInterval(this.currDateTimer);\n  }\n\n  loading(): boolean {\n    return this.wsApi.loading;\n  }\n\n  // return the color for the alert\n  alertType(): string {\n    if (this.fullWeather) {\n      if (this.fullWeather.alert) {\n        const alertLvl = this.fullWeather.alert.level;\n        if (alertLvl === AlertLvl.STATEMENT) {\n          return 'dark';\n        } else if (alertLvl === AlertLvl.WARNING) {\n          return 'danger';\n        } else if (alertLvl === AlertLvl.WATCH) {\n          return 'warning';\n        }\n      }\n    }\n    return 'light';\n  }\n\n  // navigate to the alert screen.\n  showAlert(): void {\n    this.router.navigate(['/alert']);\n  }\n\n\n  // test to change the background.\n  changeBackgroundImage(): void {\n    const b = this.imageService.getBackgroundImage(this.fullWeather.weather);\n\n    this.renderer.setStyle(document.body, 'background-image', `url(${b})`);\n  }\n  // open the modal component to Rename the group\n  openFormModal(btnNbr: number): void {\n    const modalRef = this.modalService.open(PasswordModalComponent);\n\n    modalRef.result.then((result) => {\n      if (result === 'ValidPassword') {\n        this.router.navigate(['/config']);\n      }\n    }).catch((error) => {\n      if (error !== 'Cross click') {\n        console.error('password error : ', error);\n      }\n    });\n  }\n\n  filterSensors(): void {\n    // it will filter the sensors.. example, if we did not get any data from a sensor for more than a day, remove it.\n\n    // pool sensor filter\n    if (this.fullWeather.localtemp.tempPool ) {\n       const poolDate: Date = new Date(this.fullWeather.localtemp.tmpPoolUpdDt);\n       const timeSpent = this.currDate.getTime() - poolDate.getTime();\n      //  console.log('time spent: ' , timeSpent, this.currDate.getTime() ,poolDate.getTime(), poolDate );\n       if (timeSpent > 86400000 ){ //one day for the pool sensor\n        this.fullWeather.localtemp.tmpPoolUpdDt = null;\n        this.fullWeather.localtemp.tempPool = null;\n       }\n\n    }\n  }\n\n}\n\n","<div class=\"container-fluid\" class=\"imageBack\">\n\t<app-toast></app-toast>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12 mt-1\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-4\" style=\"padding-right: 10px;\">\n\t\t\t\t\t<div class=\"jumbotron card card-block ml-1 \" style=\" padding: 10px 8px 10px 08px;height: 47vh;\">\n\t\t\t\t\t\t<div>Sensor 1</div>\n\t\t\t\t\t\t<div *ngIf=\"fullWeather?.localtemp.tempSun\" style=\"font-size:12vw;text-align: center;\">\n\t\t\t\t\t\t\t{{fullWeather.localtemp.tempSun}}</div>\n\t\t\t\t\t\t<div *ngIf=\"fullWeather?.localtemp.tmpSunUpdDt\" class=\"bottomleft\">\n\t\t\t\t\t\t\t{{fullWeather.localtemp.tmpSunUpdDt | date:'HH:mm' }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-4\" style=\"padding-right: 10px; padding-left: 10px;\">\n\t\t\t\t\t<div class=\"jumbotron card card-block\" #middleJumbotron\n\t\t\t\t\t\tstyle=\"color: white;border-color: white; border-width: 2px;padding: 10px 8px 10px 08px; height: 47vh;\">\n\t\t\t\t\t\t<img alt=\"weather\" width=\"108\" height=\"108\" [src]=\"weatherIcon\" class=\"center rounded-circle\" />\n\t\t\t\t\t\t<div *ngIf=\"loading()\" class=\"spinner-border spinner-border-sm mr-1\"\n\t\t\t\t\t\t\tstyle=\"  text-align: center;font-size:3vw;\"> </div>\n\n\t\t\t\t\t\t<div *ngIf=\"fullWeather\">\n\t\t\t\t\t\t\t<div style=\" font-size:2em;  text-align: center;font-size:3vw;\"> {{fullWeather.weather}}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div *ngIf=\"fullWeather.UV || fullWeather.humidity\" class=\"row\">\n\t\t\t\t\t\t\t\t<div *ngIf=\"fullWeather.UV\" class=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t<div style=\"font-size:2vw;\"> UV: {{fullWeather.UV}} </div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div *ngIf=\"fullWeather.humidity\" class=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t<div style=\"font-size:2vw;text-align: right\"> Humidity: {{fullWeather.humidity}}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div *ngIf=\"fullWeather.wingChill || fullWeather.humidex\" class=\"row\">\n\t\t\t\t\t\t\t\t<div *ngIf=\"fullWeather.wingChill\" class=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t<div style=\"font-size:2vw;\"> WindChill: {{fullWeather.wingChill}} </div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div *ngIf=\"fullWeather.humidex\" class=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t<div style=\"font-size:2vw;text-align: right\"> Humidex: {{fullWeather.humidex}}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div *ngIf=\"fullWeather.wind\" style=\"text-align: left;font-size:2vw;\"> {{fullWeather.wind}}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div *ngIf=\"fullWeather.temperature\" class=\"bottomleft\">\n\t\t\t\t\t\t\t\t{{fullWeather.temperature}}<span>&#176;</span>C</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div *ngIf=\"wthErrors\" style=\"font-size:1.5vw;\"> {{wthErrors.message}} </div>\n\t\t\t\t\t\t<div *ngIf=\"obsDate\" class=\"bottomright\"><small>{{obsDate | date:'medium'}}</small></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-4\" style=\"padding-left: 10px; \">\n\t\t\t\t\t<div class=\"jumbotron card card-block mr-1 \"\n\t\t\t\t\t\tstyle=\"color: white;border-color: white; border-width: 2px; padding: 10px 8px 10px 10px;height: 47vh;\">\n\t\t\t\t\t\t<div>Sensor 2</div>\n\t\t\t\t\t\t<div *ngIf=\"fullWeather?.localtemp.tempShade\" style=\"font-size:12vw;text-align: center;\">\n\t\t\t\t\t\t\t{{fullWeather.localtemp.tempShade}}</div>\n\t\t\t\t\t\t<div *ngIf=\"fullWeather?.localtemp.tmpShadeUpdDt\" class=\"bottomright\">\n\t\t\t\t\t\t\t{{fullWeather.localtemp.tmpShadeUpdDt | date:'HH:mm' }}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12 mr-1 \">\n\t\t\t<div class=\"jumbotron card card-block ml-1  mr-1\"\n\t\t\t\tstyle=\"padding: 10px 8px 10px 08px;min-height: 200px; height: 50vh;\">\n\t\t\t\t<div *ngIf=\"fullWeather\">\n\n\t\t\t\t\t<ngb-alert *ngIf=\"fullWeather.alert\" [type]=\"alertType()\" (click)=\"showAlert()\"\n\t\t\t\t\t\t[dismissible]=\"false\" style=\"text-align: center\">\n\t\t\t\t\t\t<strong>{{fullWeather.alert.level}}</strong> {{fullWeather.alert.title}}\n\t\t\t\t\t</ngb-alert>\n\n\t\t\t\t\t<span class=\"float-right\">\n\t\t\t\t\t\t<fa-icon [icon]=\"faWarehouse\" class=\"mr-2\"></fa-icon>{{fullWeather.localtemp.tempMap.GARAGE}}&#x2103;\n\t\t\t\t\t\t<span *ngIf=\"fullWeather.localtemp.tempPool\"> \n\t\t\t\t\t\t\t<fa-icon [icon]=\"faSwimming\" class=\"ml-2 mr-1\"></fa-icon> {{fullWeather.localtemp.tempPool}}&#x2103;\n\t\t\t\t\t\t</span>\n\t\t\t\t   </span>\t\n\n\t\t\t\t\t<div (click)=\"fullForecast()\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<div> <span style=\"font-size: 4vw\">{{fullWeather.forecast[0].dayOfWeek}}</span> </div>\n\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<p style=\"font-size: 3vw\">\n\t\t\t\t\t\t\t{{fullWeather.forecast[0].forecast}}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"obsDate\" style=\"font-size: 2vw\" class=\"bottomright\">\n\t\t\t\t\t{{ currDate | date:'MMM d, y, HH:mm:ss' }}</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n</div>\n\n<div class=\"row ml-1\">\n\t<div class=\"col\">\n\t\t<div class=\"float-right\" style=\"background-color: white;\">Tada</div>\n\t\t<div ngbDropdown class=\"d-inline-block \">\n\t\t\t<button class=\"btn btn-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>Settings</button>\n\t\t\t<div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n\t\t\t\t<button ngbDropdownItem (click)=\"openFormModal(1)\">Weather Config</button>\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}